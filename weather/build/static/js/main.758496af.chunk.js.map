{"version":3,"sources":["icons/skyClear.svg","icons/skyClearNight.svg","icons/rain.svg","icons/rainNight.svg","icons/showerRain.svg","icons/fewClouds.svg","icons/fewCloudsNight.svg","icons/clouds.svg","icons/thunderstorm.svg","icons/snow.svg","icons/mist.svg","City.js","Clock/ClockDigit.js","Clock/index.js","Clock/Clock.js","Day.js","Settings/SettingsContext.js","Settings/Settings.js","Settings/settings_operations.js","Settings/SettingsProvider.js","Settings/index.js","Modal.js","icons/gear.svg","Nav.js","api_builder.js","config.js","Weather/Weather.js","icon.js","Weather/WeatherForecast.js","Weather/weather_info.js","Weather/WeatherNow.js","Weather/WeatherPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","City","cityName","className","ClockDigit","digits","children","style","fontSize","Clock","useState","Date","now","setNow","useEffect","interval","setInterval","clearInterval","getHours","getMinutes","getSeconds","Day","toLocaleDateString","weekday","year","month","day","SettingsContext","React","createContext","Radiobox","label","rest","type","name","saveSettings","settings","localStorage","setItem","JSON","stringify","SettingsProvider","savedSettings","defaultSettings","parse","getItem","loadSettings","units","updateSettings","setSettings","updateSettingsMaker","Provider","value","Settings","useContext","onChange","event","prevSettings","target","chnageSettings","defaultChecked","placeholder","Modal","setIsModalShown","settingsDiv","document","getElementById","ReactDOM","createPortal","aria-label","onClick","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","Nav","role","cursor","fill","apiBuilder","state","queries","base","concat","queryString","entries","reduce","acc","cur","Weather","minTemperature","maxTemperature","describtion","icon","parseInt","margin","src","alt","isDayTime","hours","isWithinRange","number","start","end","selectWeatherIcon","code","isDay","thunderstorm","rain","rainNight","showerRain","snow","mist","skyClear","skyClearNight","fewClouds","fewCloudsNight","clouds","WeatherForecast","weatherForecast","setWeatherForecast","endpoint","q","appid","config","forecastList","fetch","then","res","json","data","list","todaysWeatherInfo","dayTime","nextDayWeatherInfo","find","weatherData","dt","push","map","weatherForecastDay","main","temp_max","temp_min","weather","description","id","epoch","WeatherInfo","temperature","WeatherNow","setWeather","temp","App","isModalShown","Boolean","window","location","hostname","match","Array","random","Math","floor","body","backgroundColor","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.758496af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/skyClear.82e74c51.svg\";","module.exports = __webpack_public_path__ + \"static/media/skyClearNight.9b4212b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.6e343b68.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainNight.8f7efdf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/showerRain.d6f51fa8.svg\";","module.exports = __webpack_public_path__ + \"static/media/fewClouds.36915a3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fewCloudsNight.3abe0a8b.svg\";","module.exports = __webpack_public_path__ + \"static/media/clouds.63473ede.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.c352a1ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.619a0c2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/mist.ce32e208.svg\";","import PropTypes from 'prop-types'\nimport React from 'react'\n\nexport default function City ({ cityName }) {\n  return (\n    <div>\n      <h4 className=\"has-text-centered\n      is-family-sans-serif\n      is-size-4\n      has-text-dark\">\n        {cityName}\n      </h4>\n    </div>\n  )\n}\n\nCity.propTypes = {\n  cityName: PropTypes.string\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\n\nexport default function ClockDigit ({ digits, children }) {\n  const style = { fontSize: '6rem' }\n  return (\n    <div className=\"column\">\n      <h1 style={style}>{digits} { children }</h1>\n    </div>\n  )\n}\n\nClockDigit.propTypes = {\n  digits: PropTypes.number,\n  children: PropTypes.array\n}\n","import Clock from './Clock'\n\nexport default Clock\n","import React, { useState, useEffect } from 'react'\nimport ClockDigit from './ClockDigit'\n\nexport default function Clock () {\n  const [now, setNow] = useState(new Date())\n\n  useEffect(() => {\n    const interval = setInterval(() => setNow(new Date()), 1000)\n    return () => {\n      clearInterval(interval)\n    }\n  },\n  [])\n  return (\n    <section>\n      <div className=\"columns has-text-centered is-family-sans-serif\">\n        <ClockDigit digits={now.getHours()}/>\n        <ClockDigit digits={now.getMinutes()}/>\n        <ClockDigit digits={ now.getSeconds()}/>\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\n\nfunction todaysFullDate () {\n  const today = new Date()\n  const locals = 'en-GB'\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }\n\n  return today.toLocaleDateString(locals, options)\n}\n\nexport default function Day () {\n  return (\n    <section>\n      <div className=\"has-text-centered is-family-sans-serif is-size-5 mb-3 mt-3\">\n        <h2 className=\"has-text-dark\">{ todaysFullDate() }</h2>\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\n\nconst SettingsContext = React.createContext()\n\nexport default SettingsContext\n","import PropTypes from 'prop-types'\nimport React, { useContext } from 'react'\nimport SettingsContext from './SettingsContext'\n\nfunction Radiobox ({ label, ...rest }) {\n  return (\n    <label className=\"radio\">\n      <input type=\"radio\" name=\"units\" {...rest}/>\n      {label}\n    </label>\n  )\n}\n\nfunction chnageSettings (event, setSettings, prevSettings) {\n  const name = event.target.name\n  const value = event.target.value\n\n  setSettings({ ...prevSettings, [name]: value })\n}\n\nexport default function Settings () {\n  const { settings, updateSettings } = useContext(SettingsContext)\n  const { units } = settings\n\n  return (\n    <div>\n      <form onChange={event => chnageSettings(event, updateSettings, settings)}>\n\n        <div className=\"field\">\n          <label className=\"label\">Units</label>\n          <div className=\"control\">\n            <Radiobox label='C (metric)' value='metric' defaultChecked={ units === 'metric'}/>\n            <Radiobox label='F (imperial)' value='imperial' defaultChecked={ units === 'imperial'}/>\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">Location</label>\n          <div className=\"control\">\n            <input className=\"input\" name=\"location\" type=\"text\" placeholder=\"Weather location\"/>\n          </div>\n        </div>\n\n      </form>\n\n    </div>\n  )\n}\n\nRadiobox.propTypes = {\n  label: PropTypes.string\n}\n","const SETTINGS_KEY = 'settings'\n\nfunction saveSettings (settings) {\n  localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings))\n}\n\nfunction loadSettings (defaultSettings) {\n  const settings = JSON.parse(localStorage.getItem(SETTINGS_KEY))\n  if (settings) {\n    return settings\n  }\n\n  saveSettings(defaultSettings)\n  return defaultSettings\n}\n\nexport { loadSettings, saveSettings }\n","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport SettingsContext from './SettingsContext'\nimport { loadSettings, saveSettings } from './settings_operations'\n\nfunction updateSettingsMaker (setSettings) {\n  return settings => {\n    setSettings(settings)\n    saveSettings(settings)\n  }\n}\n\nexport default function SettingsProvider ({ children }) {\n  const defaultSettings = {\n    units: 'metric'\n  }\n  const savedSettings = loadSettings(defaultSettings)\n\n  const [settings, setSettings] = useState(savedSettings)\n  const updateSettings = updateSettingsMaker(setSettings)\n\n  return (\n    <SettingsContext.Provider value={{ settings, updateSettings }}>\n      { children }\n    </SettingsContext.Provider>\n  )\n}\n\nSettingsProvider.propTypes = {\n  children: PropTypes.array\n}\n","import Settings from './Settings'\nimport SettingsContext from './SettingsContext'\nimport SettingsProvider from './SettingsProvider'\n\nexport default Settings\n\nexport { SettingsProvider, SettingsContext }\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Settings from './Settings'\n\nexport default function Modal ({ setIsModalShown }) {\n  const settingsDiv = document.getElementById('settings')\n\n  return ReactDOM.createPortal(\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">Settings</p>\n          <button className=\"delete\" aria-label=\"close\" onClick={() => setIsModalShown(false)}/>\n        </header>\n        <section className=\"modal-card-body\">\n          <Settings />\n        </section>\n      </div>\n    </div>,\n    settingsDiv\n  )\n}\n\nModal.propTypes = {\n  setIsModalShown: PropTypes.func\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\"\n});\n\nvar SvgGear = function SvgGear(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGear, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/gear.aa23d232.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { ReactComponent as GearIcon } from './icons/gear.svg'\n\nexport default function Nav ({ setIsModalShown }) {\n  const style = {\n    cursor: 'pointer',\n    fill: '#CCCCCC',\n    width: '4 rem'\n  }\n  return (\n\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\">\n        <span className=\"navbar-item\" style={style} onClick={() => setIsModalShown(true) }>\n          <GearIcon />\n        </span>\n      </div>\n    </nav>\n  )\n}\n\nNav.propTypes = {\n  setIsModalShown: PropTypes.func\n}\n","export default function apiBuilder (state, queries) {\n  const base = 'https://api.openweathermap.org/data/2.5/'.concat(state, '?')\n  const queriesList = Object.entries(queries)\n\n  const queryString = queriesList.reduce((acc, cur) => acc.concat(cur[0], '=', cur[1], '&'), '')\n\n  return base.concat(queryString)\n}\n","export default {\n  OPENWEATHER_API_KEY: '4b1ca1786a17f5e1dd0cff314c7bd99f'\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function Weather ({ minTemperature, maxTemperature, day, describtion, icon }) {\n  minTemperature = parseInt(minTemperature)\n  maxTemperature = parseInt(maxTemperature)\n\n  const imageStyle = { margin: 'auto' }\n\n  return (\n    <div className=\"column\">\n      <div className='container is-family-sans-serif has-text-centered'>\n        <figure className=\"image is-64x64\" style={imageStyle}>\n          <img src={icon} alt={describtion}/>\n        </figure>\n        <div className=\"container\">\n          <div className=\"columns\">\n            <h1 className=\"column is-size-4 has-text-weight-medium\">{minTemperature}</h1>\n            <h1 className=\"column is-size-4 has-text-weight-medium has-text-grey\">{maxTemperature}</h1>\n          </div>\n          <h3 className=\"has-text-weight-light is-size-3\">{day}</h3>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nWeather.propTypes = {\n  minTemperature: PropTypes.number,\n  maxTemperature: PropTypes.number,\n  day: PropTypes.string,\n  describtion: PropTypes.string,\n  icon: PropTypes.string\n}\n","import skyClear from './icons/skyClear.svg'\nimport skyClearNight from './icons/skyClearNight.svg'\n\nimport rain from './icons/rain.svg'\nimport rainNight from './icons/rainNight.svg'\nimport showerRain from './icons/showerRain.svg'\n\nimport fewClouds from './icons/fewClouds.svg'\nimport fewCloudsNight from './icons/fewCloudsNight.svg'\n\nimport clouds from './icons/clouds.svg'\n\nimport thunderstorm from './icons/thunderstorm.svg'\nimport snow from './icons/snow.svg'\nimport mist from './icons/mist.svg'\n\nfunction isDayTime () {\n  const hours = new Date().getHours()\n  return hours > 6 && hours < 20\n}\n\nfunction isWithinRange (number, start, end) {\n  if (number >= start && number < end) return true\n\n  return false\n}\n\nexport default function selectWeatherIcon (code, isDay) {\n  if (isWithinRange(code, 200, 300)) return thunderstorm\n  if (isWithinRange(code, 300, 500)) {\n    if (isDayTime() || isDay) return rain\n    return rainNight\n  }\n  if (isWithinRange(code, 500, 600)) return showerRain\n  if (isWithinRange(code, 600, 700)) return snow\n  if (isWithinRange(code, 700, 800)) return mist\n  if (code === 800) {\n    if (isDayTime() || isDay) return skyClear\n    return skyClearNight\n  }\n  if (isWithinRange(code, 801, 803)) {\n    if (isDayTime() || isDay) return fewClouds\n    return fewCloudsNight\n  }\n  return clouds\n}\n","import React, { useEffect, useState } from 'react'\nimport apiBuilder from '../api_builder'\nimport config from '../config'\nimport Weather from './Weather'\nimport selectWeatherIcon from '../icon'\nimport PropTypes from 'prop-types'\n\nfunction epochToDayName (epoch) {\n  const day = new Date(epoch * 1000) // To millisceonds\n  const locals = 'en-GB'\n  const options = { weekday: 'long' }\n  return day.toLocaleDateString(locals, options)\n}\n\nexport default function WeatherForecast ({ units }) {\n  const [weatherForecast, setWeatherForecast] = useState([])\n\n  useEffect(() => {\n    const endpoint = apiBuilder('forecast', { q: 'Cairo', units, appid: config.OPENWEATHER_API_KEY })\n    const forecastList = []\n    fetch(endpoint)\n      .then(res => res.json())\n      .then(data => {\n        const list = data.list\n        const todaysWeatherInfo = list[0]\n        for (\n          let i = 0, dayTime = todaysWeatherInfo.dt;\n          i <= 4;\n          dayTime = (24 * 60 * 60) * i, i++\n        ) {\n          const nextDayWeatherInfo = list.find(weatherData => weatherData.dt >= todaysWeatherInfo.dt + dayTime)\n          nextDayWeatherInfo && forecastList.push(nextDayWeatherInfo)\n        }\n        setWeatherForecast(forecastList)\n      })\n  }, [units])\n  return (\n    weatherForecast.map(weatherForecastDay =>\n      (<Weather\n        key={weatherForecastDay.dt}\n        maxTemperature={weatherForecastDay.main.temp_max}\n        minTemperature={weatherForecastDay.main.temp_min}\n        describtion={weatherForecastDay.weather[0].description}\n        icon={selectWeatherIcon(weatherForecastDay.weather[0].id, true)}\n        day={epochToDayName(weatherForecastDay.dt)}\n      />)\n    )\n  )\n}\n\nWeatherForecast.propTypes = {\n  units: PropTypes.string\n}\n","export default class WeatherInfo {\n  constructor (temperature, description, icon, day) {\n    this.temperature = temperature\n    this.description = description\n    this.icon = icon\n    this.day = day\n  }\n}\n","import PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\nimport apiBuilder from '../api_builder'\nimport config from '../config'\nimport selectWeatherIcon from '../icon'\nimport WeatherInfo from './weather_info'\n\nexport default function WeatherNow ({ units }) {\n  const imageStyle = { margin: 'auto' }\n\n  const [weather, setWeather] = useState(new WeatherInfo())\n\n  useEffect(() => {\n    const endpoint = apiBuilder('weather', { q: 'Cairo', units, appid: config.OPENWEATHER_API_KEY })\n    fetch(endpoint)\n      .then(res => res.json())\n      .then(data => {\n        const temperature = parseInt(data.main.temp)\n        const description = data.weather[0].description\n        const code = data.weather[0].id\n        const icon = selectWeatherIcon(code)\n\n        setWeather(new WeatherInfo(temperature, description, icon, 'Now'))\n      })\n  }, [units])\n\n  return (\n    <div className=\"column\">\n\n      <div className='has-text-centered is-family-sans-serif'>\n        <figure className=\"image is-128x128 mb-2\" style={imageStyle}>\n          <img src={weather.icon} alt={weather.describtion}/>\n        </figure>\n        <h1 className=\"is-size-3 has-text-weight-bold\">{weather.temperature}</h1>\n        <h3 className=\"has-text-weight-light is-size-2\">{weather.day}</h3>\n\n      </div>\n    </div>\n  )\n}\n\nWeatherNow.propTypes = {\n  units: PropTypes.string\n}\n","import React, { useContext } from 'react'\nimport { SettingsContext } from '../Settings'\nimport WeatherForecast from './WeatherForecast'\nimport WeatherNow from './WeatherNow'\n\nexport default function Weather () {\n  const { settings } = useContext(SettingsContext)\n  const { units } = settings\n\n  return (\n    <section>\n      <div className=\"columns is-vcentered is-centered mb-2\">\n        <WeatherNow units={units} />\n        <WeatherForecast units={units} />\n      </div>\n    </section>\n  )\n}\n","import React, { useState } from 'react'\nimport './App.scss'\nimport City from './City'\nimport Clock from './Clock'\nimport Day from './Day'\nimport Modal from './Modal'\nimport Nav from './Nav'\nimport { WeatherPanel } from './Weather'\nimport { SettingsProvider } from './Settings'\n\nfunction App () {\n  const [isModalShown, setIsModalShown] = useState(true)\n\n  return (\n    <SettingsProvider>\n      <Nav setIsModalShown={setIsModalShown}/>\n      <div className=\"container\">\n        <Clock/>\n        <Day/>\n        <WeatherPanel/>\n        <City cityName='Cairo, Egypt'/>\n        {isModalShown && <Modal setIsModalShown={setIsModalShown}/>}\n      </div>\n    </SettingsProvider>\n\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n/* eslint no-extend-native: [\"error\", { \"exceptions\": [\"Array\"] }] */\nArray.prototype.random = function () {\n  return this[Math.floor((Math.random() * this.length))]\n}\n\nconst backgroundColors = [\n  '#565c5e',\n  '#455954',\n  '#9d7463',\n  '#b5c2c7',\n  '#dfdbd8'\n]\n\ndocument.body.style.backgroundColor = '#fffff'//backgroundColors.random()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}