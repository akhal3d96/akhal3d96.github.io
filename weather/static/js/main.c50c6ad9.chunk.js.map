{"version":3,"sources":["icons/skyClear.svg","icons/skyClearNight.svg","icons/rain.svg","icons/rainNight.svg","icons/showerRain.svg","icons/fewClouds.svg","icons/fewCloudsNight.svg","icons/clouds.svg","icons/thunderstorm.svg","icons/snow.svg","icons/mist.svg","Settings/SettingsContext.js","config.js","Settings/Settings.js","Settings/settings_operations.js","Settings/SettingsProvider.js","Settings/index.js","City.js","Clock/ClockDigit.js","Clock/Hours12.js","Clock/Hours24.js","Clock/index.js","Clock/Clock.js","Day.js","Modal.js","icons/gear.svg","Nav.js","api_builder.js","Weather/Weather.js","icon.js","Weather/WeatherForecast.js","Weather/weather_info.js","Weather/WeatherNow.js","Weather/WeatherPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SettingsContext","React","createContext","units","location","timeFormat","showSeconds","isDarkMode","Radiobox","label","rest","className","type","saveSettings","settings","localStorage","setItem","JSON","stringify","SettingsProvider","children","savedSettings","defaultSettings","parse","getItem","loadSettings","config","useState","updateSettings","setSettings","updateSettingsMaker","Provider","value","Settings","useContext","onChange","event","prevSettings","target","name","checked","chnageSettings","placeholder","defaultValue","defaultChecked","onClick","preventDefault","restoreDefaultSettings","City","footerTextClassName","concat","footerClassName","ClockDigit","digits","style","fontSize","toHours12","date","getHours","Hours12","timePeriod","getMinutes","getSeconds","Hours24","Clock","Date","now","setNow","useEffect","interval","setInterval","clearInterval","Day","dayTextClassName","toLocaleDateString","weekday","year","month","day","Modal","setIsModalShown","settingsDiv","document","getElementById","ReactDOM","createPortal","aria-label","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","LightButton","DarkButton","Nav","navClassName","role","cursor","fill","querySelector","backgroundColor","toggleThemeMode","apiBuilder","state","queries","base","queryString","entries","reduce","acc","cur","Weather","minTemperature","maxTemperature","describtion","icon","parseInt","margin","src","alt","isDayTime","hours","isWithinRange","number","start","end","selectWeatherIcon","code","isDay","thunderstorm","rain","rainNight","showerRain","snow","mist","skyClear","skyClearNight","fewClouds","fewCloudsNight","clouds","WeatherForecast","weatherForecast","setWeatherForecast","endpoint","q","appid","forecastList","fetch","then","res","json","data","list","todaysWeatherInfo","dayTime","nextDayWeatherInfo","find","weatherData","dt","push","catch","map","weatherForecastDay","main","temp_max","temp_min","weather","description","id","epoch","WeatherInfo","temperature","WeatherNow","setWeather","temp","searchLocation","replace","App","isModalShown","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","render","StrictMode","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c50c6ad9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/skyClear.68d8c2c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/skyClearNight.66944070.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.4f3d1106.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainNight.fd453ba5.svg\";","module.exports = __webpack_public_path__ + \"static/media/showerRain.2ed277e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/fewClouds.f980fc80.svg\";","module.exports = __webpack_public_path__ + \"static/media/fewCloudsNight.a9704210.svg\";","module.exports = __webpack_public_path__ + \"static/media/clouds.b797a624.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.13f399bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.18a9fdd5.svg\";","module.exports = __webpack_public_path__ + \"static/media/mist.1ab10811.svg\";","import React from 'react'\n\nconst SettingsContext = React.createContext()\n\nexport default SettingsContext\n","export default {\n  OPENWEATHER_API_KEY: '4b1ca1786a17f5e1dd0cff314c7bd99f',\n  defaultSettings: {\n    units: 'metric',\n    location: 'Cairo,EG',\n    timeFormat: '12hours',\n    showSeconds: true,\n    isDarkMode: false\n  }\n}\n","import PropTypes from 'prop-types'\nimport React, { useContext } from 'react'\nimport SettingsContext from './SettingsContext'\nimport config from '../config'\n\nfunction Radiobox ({ label, ...rest }) {\n  return (\n    <label className=\"radio\">\n      <input type=\"radio\" {...rest}/>\n      {label}\n    </label>\n  )\n}\n\nfunction chnageSettings (event, setSettings, prevSettings) {\n  const type = event.target.type\n  const name = event.target.name\n  const value = type === 'checkbox' ? event.target.checked : event.target.value\n  setSettings({ ...prevSettings, [name]: value })\n}\n\nfunction restoreDefaultSettings (event, setSettings) {\n  event.preventDefault()\n  setSettings(config.defaultSettings)\n}\n\nexport default function Settings () {\n  const { settings, updateSettings } = useContext(SettingsContext)\n  const { units, location, timeFormat, showSeconds } = settings\n\n  return (\n    <div>\n      <form onChange={event => chnageSettings(event, updateSettings, settings)}>\n\n        <div className=\"field\">\n          <label className=\"label\">Location</label>\n          <div className=\"control\">\n            <input className=\"input\" name=\"location\" type=\"text\" placeholder=\"Weather location\" defaultValue={location}/>\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">Time format</label>\n          <div className=\"control\">\n            <Radiobox name=\"timeFormat\" label='12 Hours (AM/PM)' value='12hours' defaultChecked={timeFormat === '12hours'}/>\n            <Radiobox name=\"timeFormat\" label='24 Hours' value='24hours' defaultChecked={timeFormat === '24hours'}/>\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">Units</label>\n          <div className=\"control\">\n            <Radiobox name=\"units\" label='C (metric)' value='metric' defaultChecked={ units === 'metric'}/>\n            <Radiobox name=\"units\" label='F (imperial)' value='imperial' defaultChecked={ units === 'imperial'}/>\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">Other options</label>\n          <div className=\"control\">\n            <label className=\"checkbox\">\n              <input type=\"checkbox\" name=\"showSeconds\" checked={showSeconds}/>\n                Show seconds\n            </label>\n          </div>\n        </div>\n\n        <button onClick={event => restoreDefaultSettings(event, updateSettings)}\n          className=\"button\">\n          Restore to default\n        </button>\n\n      </form>\n\n    </div>\n  )\n}\n\nRadiobox.propTypes = {\n  label: PropTypes.string\n}\n","const SETTINGS_KEY = 'settings'\n\nfunction saveSettings (settings) {\n  localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings))\n}\n\nfunction loadSettings (defaultSettings) {\n  const settings = JSON.parse(localStorage.getItem(SETTINGS_KEY))\n  if (settings) {\n    return settings\n  }\n\n  saveSettings(defaultSettings)\n  return defaultSettings\n}\n\nexport { loadSettings, saveSettings }\n","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport SettingsContext from './SettingsContext'\nimport { loadSettings, saveSettings } from './settings_operations'\nimport config from '../config'\n\nfunction updateSettingsMaker (setSettings) {\n  return settings => {\n    setSettings(settings)\n    saveSettings(settings)\n  }\n}\n\nexport default function SettingsProvider ({ children }) {\n  const defaultSettings = config.defaultSettings\n\n  const savedSettings = loadSettings(defaultSettings)\n\n  const [settings, setSettings] = useState(savedSettings)\n  const updateSettings = updateSettingsMaker(setSettings)\n\n  return (\n    <SettingsContext.Provider value={{ settings, updateSettings }}>\n      { children }\n    </SettingsContext.Provider>\n  )\n}\n\nSettingsProvider.propTypes = {\n  children: PropTypes.array\n}\n","import Settings from './Settings'\nimport SettingsContext from './SettingsContext'\nimport SettingsProvider from './SettingsProvider'\n\nexport default Settings\n\nexport { SettingsProvider, SettingsContext }\n","import React, { useContext } from 'react'\nimport { SettingsContext } from './Settings'\n\nexport default function City () {\n  const { settings } = useContext(SettingsContext)\n  const { location, isDarkMode } = settings\n\n  const footerTextClassName = 'has-text-centered is-family-sans-serif is-size-4'\n    .concat(' ', isDarkMode ? 'has-text-light' : 'has-text-dark')\n\n  const footerClassName = 'footer'.concat(isDarkMode ? ' has-background-black' : ' has-background-white')\n\n  return (\n    <footer className={footerClassName}>\n      <div>\n        <h4 className={footerTextClassName}>\n          {location}\n        </h4>\n      </div>\n    </footer>\n\n  )\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\n\nexport default function ClockDigit ({ digits, isDarkMode, children }) {\n  const style = { fontSize: '6rem' }\n  return (\n    <div className=\"column\">\n      <h1 className={isDarkMode && 'has-text-white'} style={style}>{digits} { children }</h1>\n    </div>\n  )\n}\n\nClockDigit.propTypes = {\n  digits: PropTypes.oneOfType([Number, String]).isRequired,\n  children: PropTypes.array,\n  isDarkMode: PropTypes.bool\n}\n","import React from 'react'\nimport ClockDigit from './ClockDigit'\nimport PropTypes from 'prop-types'\n\nfunction toHours12 (date) {\n  return (date.getHours() + 24) % 12 || 12\n}\n\nexport default function Hours12 ({ date, showSeconds, isDarkMode }) {\n  const timePeriod = date.getHours() >= 0 && date.getHours() < 12 ? 'AM' : 'PM'\n  return (\n    <>\n      <ClockDigit digits={toHours12(date)} isDarkMode={isDarkMode} />\n      <ClockDigit digits={date.getMinutes()} isDarkMode={isDarkMode}/>\n      { showSeconds && <ClockDigit digits={date.getSeconds()} isDarkMode={isDarkMode}/>}\n      <ClockDigit digits={timePeriod} isDarkMode={isDarkMode}/>\n    </>\n  )\n}\n\nHours12.propTypes = {\n  date: PropTypes.instanceOf(Date),\n  showSeconds: PropTypes.bool,\n  isDarkMode: PropTypes.bool\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport ClockDigit from './ClockDigit'\n\nexport default function Hours24 ({ date, showSeconds }) {\n  return (\n    <>\n      <ClockDigit digits={date.getHours()}/>\n      <ClockDigit digits={date.getMinutes()}/>\n      { showSeconds && <ClockDigit digits={date.getSeconds()}/>}\n    </>\n  )\n}\n\nHours24.propTypes = {\n  date: PropTypes.instanceOf(Date),\n  showSeconds: PropTypes.bool\n}\n","import Clock from './Clock'\n\nexport default Clock\n","import React, { useContext, useEffect, useState } from 'react'\nimport { SettingsContext } from '../Settings'\nimport Hours12 from './Hours12'\nimport Hours24 from './Hours24'\n\nexport default function Clock () {\n  const [now, setNow] = useState(new Date())\n\n  const { settings } = useContext(SettingsContext)\n  const { timeFormat, showSeconds, isDarkMode } = settings\n\n  useEffect(() => {\n    const interval = setInterval(() => setNow(new Date()), 1000)\n    return () => {\n      clearInterval(interval)\n    }\n  },\n  [showSeconds])\n  return (\n    <section>\n      <div className=\"columns has-text-centered is-family-sans-serif\">\n        { timeFormat === '24hours'\n          ? <Hours24 date={now} showSeconds={showSeconds} isDarkMode={isDarkMode} />\n          : <Hours12 date={now} showSeconds={showSeconds} isDarkMode={isDarkMode}/>\n        }\n      </div>\n    </section>\n  )\n}\n","import React, { useContext } from 'react'\nimport { SettingsContext } from './Settings'\n\nfunction todaysFullDate () {\n  const today = new Date()\n  const locals = 'en-GB'\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }\n\n  return today.toLocaleDateString(locals, options)\n}\n\nexport default function Day () {\n  const { settings } = useContext(SettingsContext)\n  const { isDarkMode } = settings\n\n  const dayTextClassName = isDarkMode ? 'has-text-light' : 'has-text-dark'\n  return (\n    <section>\n      <div className=\"has-text-centered is-family-sans-serif is-size-5 mb-3 mt-3\">\n        <h2 className={dayTextClassName}>{ todaysFullDate() }</h2>\n      </div>\n    </section>\n  )\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Settings from './Settings'\n\nexport default function Modal ({ setIsModalShown }) {\n  const settingsDiv = document.getElementById('settings')\n\n  return ReactDOM.createPortal(\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">Settings</p>\n          <button className=\"delete\" aria-label=\"close\" onClick={() => setIsModalShown(false)}/>\n        </header>\n        <section className=\"modal-card-body\">\n          <Settings />\n        </section>\n      </div>\n    </div>,\n    settingsDiv\n  )\n}\n\nModal.propTypes = {\n  setIsModalShown: PropTypes.func\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\"\n});\n\nvar SvgGear = function SvgGear(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGear, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/gear.aa23d232.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { SettingsContext } from './Settings'\nimport { ReactComponent as GearIcon } from './icons/gear.svg'\n\nfunction toggleThemeMode (settings, updateSettings) {\n  const isDarkMode = !settings.isDarkMode\n  updateSettings({ ...settings, isDarkMode })\n\n  document.querySelector('html').style.backgroundColor = isDarkMode ? '#0A0A0A' : '#ffffff'\n}\n\nfunction LightButton () {\n  return (\n    <button className=\"button is-dark\">Dark</button>\n  )\n}\n\nfunction DarkButton () {\n  return (\n    <button className=\"button is-light\">Light</button>\n  )\n}\n\nexport default function Nav ({ setIsModalShown }) {\n  const { settings, updateSettings } = useContext(SettingsContext)\n  const { isDarkMode } = settings\n\n  const navClassName = 'navbar'.concat(isDarkMode ? ' has-background-black' : '')\n\n  const style = {\n    cursor: 'pointer',\n    fill: '#CCCCCC',\n    width: '4 rem'\n  }\n  return (\n\n    <nav className={navClassName} role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\">\n        <span className=\"navbar-item\" style={style} onClick={() => setIsModalShown(true) }>\n          <GearIcon />\n        </span>\n      </div>\n\n      <div className=\"navbar-menu\">\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n\n            <div className=\"toggleTheme\" onClick={() => toggleThemeMode(settings, updateSettings)}>\n              { isDarkMode ? <DarkButton/> : <LightButton/> }\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nNav.propTypes = {\n  setIsModalShown: PropTypes.func\n}\n","export default function apiBuilder (state, queries) {\n  const base = 'https://api.openweathermap.org/data/2.5/'.concat(state, '?')\n  const queriesList = Object.entries(queries)\n\n  const queryString = queriesList.reduce((acc, cur) => acc.concat(cur[0], '=', cur[1], '&'), '')\n\n  return base.concat(queryString)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function Weather ({ minTemperature, maxTemperature, day, describtion, icon, isDarkMode }) {\n  minTemperature = parseInt(minTemperature)\n  maxTemperature = parseInt(maxTemperature)\n\n  const imageStyle = { margin: 'auto' }\n\n  return (\n    <div className=\"column\">\n      <div className='container is-family-sans-serif has-text-centered'>\n        <figure className=\"image is-64x64\" style={imageStyle}>\n          <img src={icon} alt={describtion} className={isDarkMode && 'is-dark-mode'}/>\n        </figure>\n        <div className=\"container\">\n          <div className=\"columns\">\n            <h1 className=\"column is-size-4 has-text-weight-medium\">{minTemperature}</h1>\n            <h1 className=\"column is-size-4 has-text-weight-medium has-text-grey\">{maxTemperature}</h1>\n          </div>\n          <h3 className=\"has-text-weight-light is-size-3\">{day}</h3>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nWeather.propTypes = {\n  minTemperature: PropTypes.number,\n  maxTemperature: PropTypes.number,\n  day: PropTypes.string,\n  describtion: PropTypes.string,\n  icon: PropTypes.string,\n  isDarkMode: PropTypes.object\n}\n","import skyClear from './icons/skyClear.svg'\nimport skyClearNight from './icons/skyClearNight.svg'\n\nimport rain from './icons/rain.svg'\nimport rainNight from './icons/rainNight.svg'\nimport showerRain from './icons/showerRain.svg'\n\nimport fewClouds from './icons/fewClouds.svg'\nimport fewCloudsNight from './icons/fewCloudsNight.svg'\n\nimport clouds from './icons/clouds.svg'\n\nimport thunderstorm from './icons/thunderstorm.svg'\nimport snow from './icons/snow.svg'\nimport mist from './icons/mist.svg'\n\nfunction isDayTime () {\n  const hours = new Date().getHours()\n  return hours > 6 && hours < 20\n}\n\nfunction isWithinRange (number, start, end) {\n  if (number >= start && number < end) return true\n\n  return false\n}\n\nexport default function selectWeatherIcon (code, isDay) {\n  if (isWithinRange(code, 200, 300)) return thunderstorm\n  if (isWithinRange(code, 300, 500)) {\n    if (isDayTime() || isDay) return rain\n    return rainNight\n  }\n  if (isWithinRange(code, 500, 600)) return showerRain\n  if (isWithinRange(code, 600, 700)) return snow\n  if (isWithinRange(code, 700, 800)) return mist\n  if (code === 800) {\n    if (isDayTime() || isDay) return skyClear\n    return skyClearNight\n  }\n  if (isWithinRange(code, 801, 803)) {\n    if (isDayTime() || isDay) return fewClouds\n    return fewCloudsNight\n  }\n  return clouds\n}\n","import React, { useEffect, useState } from 'react'\nimport apiBuilder from '../api_builder'\nimport config from '../config'\nimport Weather from './Weather'\nimport selectWeatherIcon from '../icon'\nimport PropTypes from 'prop-types'\n\nfunction epochToDayName (epoch) {\n  const day = new Date(epoch * 1000) // To millisceonds\n  const locals = 'en-GB'\n  const options = { weekday: 'long' }\n  return day.toLocaleDateString(locals, options)\n}\n\nexport default function WeatherForecast ({ units, location, isDarkMode }) {\n  const [weatherForecast, setWeatherForecast] = useState([])\n\n  useEffect(() => {\n    const endpoint = apiBuilder('forecast', { q: location, units, appid: config.OPENWEATHER_API_KEY })\n    const forecastList = []\n    fetch(endpoint)\n      .then(res => res.json())\n      .then(data => {\n        const list = data.list\n        const todaysWeatherInfo = list[0]\n        for (\n          let i = 0, dayTime = todaysWeatherInfo.dt;\n          i <= 4;\n          dayTime = (24 * 60 * 60) * i, i++\n        ) {\n          const nextDayWeatherInfo = list.find(weatherData => weatherData.dt >= todaysWeatherInfo.dt + dayTime)\n          nextDayWeatherInfo && forecastList.push(nextDayWeatherInfo)\n        }\n        setWeatherForecast(forecastList)\n      })\n      .catch(() => {})\n  }, [units, location])\n  return (\n    weatherForecast.map(weatherForecastDay =>\n      (<Weather\n        key={weatherForecastDay.dt}\n        maxTemperature={weatherForecastDay.main.temp_max}\n        minTemperature={weatherForecastDay.main.temp_min}\n        describtion={weatherForecastDay.weather[0].description}\n        icon={selectWeatherIcon(weatherForecastDay.weather[0].id, true)}\n        day={epochToDayName(weatherForecastDay.dt)}\n        isDarkMode={isDarkMode}\n      />)\n    )\n  )\n}\n\nWeatherForecast.propTypes = {\n  units: PropTypes.string,\n  location: PropTypes.string,\n  isDarkMode: PropTypes.object\n}\n","export default class WeatherInfo {\n  constructor (temperature, description, icon, day) {\n    this.temperature = temperature\n    this.description = description\n    this.icon = icon\n    this.day = day\n  }\n}\n","import PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\nimport apiBuilder from '../api_builder'\nimport config from '../config'\nimport selectWeatherIcon from '../icon'\nimport WeatherInfo from './weather_info'\n\nexport default function WeatherNow ({ units, location, isDarkMode }) {\n  const imageStyle = { margin: 'auto' }\n\n  const [weather, setWeather] = useState(new WeatherInfo())\n\n  useEffect(() => {\n    const endpoint = apiBuilder('weather', { q: location, units, appid: config.OPENWEATHER_API_KEY })\n    fetch(endpoint)\n      .then(res => res.json())\n      .then(data => {\n        const temperature = parseInt(data.main.temp)\n        const description = data.weather[0].description\n        const code = data.weather[0].id\n        const icon = selectWeatherIcon(code)\n\n        setWeather(new WeatherInfo(temperature, description, icon, 'Now'))\n      })\n      .catch(() => {})\n  }, [units, location])\n\n  return (\n    <div className=\"column\">\n\n      <div className='has-text-centered is-family-sans-serif'>\n        <figure className=\"image is-128x128 mb-2\" style={imageStyle}>\n          <img src={weather.icon} alt={weather.describtion} className={isDarkMode && 'is-dark-mode'}/>\n        </figure>\n        <h1 className=\"is-size-3 has-text-weight-bold\">{weather.temperature}</h1>\n        <h3 className=\"has-text-weight-light is-size-2\">{weather.day}</h3>\n\n      </div>\n    </div>\n  )\n}\n\nWeatherNow.propTypes = {\n  units: PropTypes.string,\n  location: PropTypes.string,\n  isDarkMode: PropTypes.object\n}\n","import React, { useContext } from 'react'\nimport { SettingsContext } from '../Settings'\nimport WeatherForecast from './WeatherForecast'\nimport WeatherNow from './WeatherNow'\n\nexport default function Weather () {\n  const { settings } = useContext(SettingsContext)\n  const { units, location, isDarkMode } = settings\n\n  const searchLocation = location.replace(/\\s/g, '')\n\n  return (\n    <section>\n      <div className=\"columns is-vcentered is-centered mb-2\">\n        <WeatherNow units={units} location={searchLocation} isDarkMode={isDarkMode}/>\n        <WeatherForecast units={units} location={searchLocation} isDarkMode={isDarkMode}/>\n      </div>\n    </section>\n  )\n}\n","import React, { useState } from 'react'\nimport './App.scss'\nimport City from './City'\nimport Clock from './Clock'\nimport Day from './Day'\nimport Modal from './Modal'\nimport Nav from './Nav'\nimport { SettingsProvider } from './Settings'\nimport { WeatherPanel } from './Weather'\n\nfunction App () {\n  const [isModalShown, setIsModalShown] = useState(false)\n\n  return (\n    <SettingsProvider>\n      <Nav setIsModalShown={setIsModalShown}/>\n      <div className=\"container\">\n        <Clock/>\n        <Day/>\n        <WeatherPanel/>\n        <City/>\n        {isModalShown && <Modal setIsModalShown={setIsModalShown}/>}\n      </div>\n    </SettingsProvider>\n\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n/* eslint no-extend-native: [\"error\", { \"exceptions\": [\"Array\"] }] */\n// Array.prototype.random = function () {\n//   return this[Math.floor((Math.random() * this.length))]\n// }\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}