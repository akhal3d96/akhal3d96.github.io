var search_data = {"index":{"searchIndex":["rlps","parser","process","string","inspect()","int?()","kill!()","new()","process_from_dir()","processes()","still_running?()","this_process()","to_i()","to_s()","update!()","readme"],"longSearchIndex":["rlps","rlps::parser","rlps::process","string","rlps::process#inspect()","string#int?()","rlps::process#kill!()","rlps::process::new()","rlps::parser::process_from_dir()","rlps#processes()","rlps::process#still_running?()","rlps::process::this_process()","rlps::process#to_i()","rlps::process#to_s()","rlps#update!()",""],"info":[["RLPS","","RLPS.html","",""],["RLPS::Parser","","RLPS/Parser.html","","<p>This class parses Linux&#39;s /proc/ directory status file.\n"],["RLPS::Process","","RLPS/Process.html","","<p>Represents a process\n"],["String","","String.html","","<p>Monkey patch the Ruby&#39;s core string class to check whether this /proc/\ndirectory represents an actual …\n"],["inspect","RLPS::Process","RLPS/Process.html#method-i-inspect","()",""],["int?","String","String.html#method-i-int-3F","()","<p>Reeturns true if the string represents an actual integer.\n"],["kill!","RLPS::Process","RLPS/Process.html#method-i-kill-21","(signal = 'INT')","<p>Send INT signal to the process as a default behaviour. It accepts any\nsignal Kernel#Process takes. More …\n"],["new","RLPS::Process","RLPS/Process.html#method-c-new","(**args)","<p>Takes two arguments <em>:name</em> and <em>:pid</em> If called without any\narguments it calls RLPS::Process.this_process …\n"],["process_from_dir","RLPS::Parser","RLPS/Parser.html#method-c-process_from_dir","(dir)","<p>This method gets a /proc/ directory, then it parses its status file and\nreturns a new RLPS::Process object. …\n"],["processes","RLPS","RLPS.html#method-i-processes","()","<p>Get the currently runing processes as a list.\n"],["still_running?","RLPS::Process","RLPS/Process.html#method-i-still_running-3F","()","<p>Returns true if the process is still running.\n"],["this_process","RLPS::Process","RLPS/Process.html#method-c-this_process","()","<p>Return this process RLPS::Process object.\n"],["to_i","RLPS::Process","RLPS/Process.html#method-i-to_i","()",""],["to_s","RLPS::Process","RLPS/Process.html#method-i-to_s","()",""],["update!","RLPS","RLPS.html#method-i-update-21","()","<p>Update the already fetched processes list.\n"],["README","","README_md.html","","<p>RLPS\n<p><strong>RLPS</strong> is a very simple and pure Ruby gem which sole prupose\nis to get a <strong>list</strong> of the currently <strong>running</strong>\n…\n"]]}}